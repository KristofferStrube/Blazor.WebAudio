@page "/Playground"
@using KristofferStrube.Blazor.DOM
@using KristofferStrube.Blazor.WebIDL;
@using KristofferStrube.Blazor.WebAudio.WasmExample.AudioEditor
@implements IAsyncDisposable
@inject IJSRuntime JSRuntime
<PageTitle>WebAudio - Playground</PageTitle>
<h2>Playground</h2>

<textarea @bind="Input" @bind:event="oninput" style="width:100%;height:10vh;" @bind:after=AudioEditor.StopAsync />

@if (Code is null)
{
    <div style="height:70vh;">
        <AudioEditor @ref=AudioEditor @bind-Input="Input" />
    </div>
}
else
{
    <div style="height:70vh;display:flex;align-items:center;justify-content:center;">
        <button class="btn btn-lg btn-success" @onclick="() => Code = null">Initialize from URL</button>
    </div>
}

@code {
    AudioEditor AudioEditor = default!;

    [Parameter, SupplyParameterFromQuery(Name = "code")]
    public string? Code { get; set; }

    public string? Input { get; set; }

    protected override void OnInitialized()
    {
        Input ??= Code;
        Input ??= "";
    }

    public async ValueTask DisposeAsync()
    {
        await AudioEditor.StopAsync();
    }
}


